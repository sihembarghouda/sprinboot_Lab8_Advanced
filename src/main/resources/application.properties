spring.application.name=api-gateway

server:
port: 8081

spring:
application:
name: api-gateway
cloud:
gateway:
discovery:
locator:
enabled: true
lower-case-service-id: true
routes:
- id: book-service
uri: lb://book-service
predicates:
- Path=/api/books/**
filters:
- name: CircuitBreaker
args:
name: bookService
fallbackUri: forward:/fallback/books
- AddRequestHeader=X-Source, api-gateway
- name: RequestRateLimiter
args:
redis-rate-limiter.replenishRate: 10
redis-rate-limiter.burstCapacity: 20

- id: book-service-docs
uri: lb://book-service
predicates:
- Path=/book-service/v3/api-docs/**
filters:
- RewritePath=/book-service/(?<segment>.*), /${segment}

- id: user-service
uri: lb://user-service
predicates:
- Path=/api/users/**
filters:
- name: CircuitBreaker
args:
name: userService
fallbackUri: forward:/fallback/users

- id: user-service-docs
uri: lb://user-service
predicates:
- Path=/user-service/v3/api-docs/**
filters:
- RewritePath=/user-service/(?<segment>.*), /${segment}

- id: analytics-service
uri: lb://analytics-service
predicates:
- Path=/api/analytics/**
filters:
- name: CircuitBreaker
args:
name: analyticsService
fallbackUri: forward:/fallback/analytics

- id: analytics-service-docs
uri: lb://analytics-service
predicates:
- Path=/analytics-service/v3/api-docs/**
filters:
- RewritePath=/analytics-service/(?<segment>.*), /${segment}

data:
redis:
host: localhost
port: 6379

eureka:
client:
serviceUrl:
defaultZone: http://localhost:8761/eureka/
instance:
preferIpAddress: true

management:
endpoints:
web:
exposure:
include: gateway,health,info
endpoint:
gateway:
enabled: true
health:
show-details: always